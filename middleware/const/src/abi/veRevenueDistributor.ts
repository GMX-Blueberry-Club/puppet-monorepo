export default [{ inputs:[{ internalType:"contract Authority", name:"_authority", type:"address" }], stateMutability:"nonpayable", type:"constructor" }, { inputs:[{ internalType:"address", name:"target", type:"address" }], name:"AddressEmptyCode", type:"error" }, { inputs:[{ internalType:"address", name:"account", type:"address" }], name:"AddressInsufficientBalance", type:"error" }, { inputs:[], name:"FailedInnerCall", type:"error" }, { inputs:[], name:"RewardLogic__NoClaimableAmount", type:"error" }, { inputs:[], name:"RewardLogic__TransferReferralFailed", type:"error" }, { inputs:[{ internalType:"address", name:"token", type:"address" }], name:"SafeERC20FailedOperation", type:"error" }, { anonymous:false, inputs:[{ indexed:true, internalType:"address", name:"user", type:"address" }, { indexed:true, internalType:"contract Authority", name:"newAuthority", type:"address" }], name:"AuthorityUpdated", type:"event" }, { anonymous:false, inputs:[{ indexed:true, internalType:"address", name:"user", type:"address" }, { indexed:true, internalType:"address", name:"newOwner", type:"address" }], name:"OwnershipTransferred", type:"event" }, { anonymous:false, inputs:[{ indexed:false, internalType:"enum RewardLogic.Choice", name:"choice", type:"uint8" }, { indexed:true, internalType:"address", name:"account", type:"address" }, { indexed:false, internalType:"address", name:"dao", type:"address" }, { indexed:false, internalType:"contract IERC20", name:"revenueInToken", type:"address" }, { indexed:false, internalType:"uint256", name:"revenueInTokenAmount", type:"uint256" }, { indexed:false, internalType:"uint256", name:"maxTokenAmount", type:"uint256" }, { indexed:false, internalType:"uint256", name:"rate", type:"uint256" }, { indexed:false, internalType:"uint256", name:"amount", type:"uint256" }, { indexed:false, internalType:"uint256", name:"daoRate", type:"uint256" }, { indexed:false, internalType:"uint256", name:"daoAmount", type:"uint256" }], name:"RewardLogic__ClaimOption", type:"event" }, { anonymous:false, inputs:[{ indexed:false, internalType:"address", name:"referralStorage", type:"address" }, { indexed:false, internalType:"bytes32", name:"code", type:"bytes32" }, { indexed:false, internalType:"address", name:"newOwner", type:"address" }, { indexed:false, internalType:"uint256", name:"timestamp", type:"uint256" }], name:"RewardLogic__ReferralOwnershipTransferred", type:"event" }, { inputs:[], name:"authority", outputs:[{ internalType:"contract Authority", name:"", type:"address" }], stateMutability:"view", type:"function" }, { inputs:[{ internalType:"contract IVeRevenueDistributor", name:"revenueDistributor", type:"address" }, { internalType:"contract IERC20", name:"revenueInToken", type:"address" }, { internalType:"address", name:"from", type:"address" }, { internalType:"address", name:"to", type:"address" }], name:"claim", outputs:[{ internalType:"uint256", name:"", type:"uint256" }], stateMutability:"nonpayable", type:"function" }, { inputs:[{ components:[{ internalType:"contract IDataStore", name:"dataStore", type:"address" }, { internalType:"contract PuppetToken", name:"puppetToken", type:"address" }, { internalType:"address", name:"dao", type:"address" }, { internalType:"address", name:"account", type:"address" }, { internalType:"contract IERC20", name:"revenueInToken", type:"address" }, { internalType:"uint256", name:"rate", type:"uint256" }, { internalType:"uint256", name:"daoRate", type:"uint256" }, { internalType:"uint256", name:"tokenPrice", type:"uint256" }], internalType:"struct RewardLogic.OptionParams", name:"params", type:"tuple" }], name:"exit", outputs:[], stateMutability:"nonpayable", type:"function" }, { inputs:[{ internalType:"contract IDataStore", name:"dataStore", type:"address" }, { internalType:"address", name:"account", type:"address" }], name:"getAccountGeneratedRevenue", outputs:[{ internalType:"uint256", name:"", type:"uint256" }], stateMutability:"view", type:"function" }, { inputs:[{ internalType:"contract IDataStore", name:"dataStore", type:"address" }, { internalType:"bytes32[]", name:"routeTypeKeys", type:"bytes32[]" }, { internalType:"address", name:"account", type:"address" }], name:"getAccountRouteList", outputs:[{ internalType:"address[]", name:"routeList", type:"address[]" }], stateMutability:"view", type:"function" }, { inputs:[{ internalType:"uint256", name:"distributionRatio", type:"uint256" }, { internalType:"uint256", name:"tokenAmount", type:"uint256" }], name:"getClaimableAmount", outputs:[{ internalType:"uint256", name:"", type:"uint256" }], stateMutability:"pure", type:"function" }, { inputs:[{ internalType:"contract VotingEscrow", name:"votingEscrow", type:"address" }, { internalType:"address", name:"account", type:"address" }, { internalType:"uint256", name:"unlockTime", type:"uint256" }], name:"getRewardTimeMultiplier", outputs:[{ internalType:"uint256", name:"", type:"uint256" }], stateMutability:"view", type:"function" }, { inputs:[{ internalType:"contract Router", name:"router", type:"address" }, { internalType:"contract VotingEscrow", name:"votingEscrow", type:"address" }, { components:[{ internalType:"contract IDataStore", name:"dataStore", type:"address" }, { internalType:"contract PuppetToken", name:"puppetToken", type:"address" }, { internalType:"address", name:"dao", type:"address" }, { internalType:"address", name:"account", type:"address" }, { internalType:"contract IERC20", name:"revenueInToken", type:"address" }, { internalType:"uint256", name:"rate", type:"uint256" }, { internalType:"uint256", name:"daoRate", type:"uint256" }, { internalType:"uint256", name:"tokenPrice", type:"uint256" }], internalType:"struct RewardLogic.OptionParams", name:"params", type:"tuple" }, { internalType:"uint256", name:"unlockTime", type:"uint256" }], name:"lock", outputs:[], stateMutability:"nonpayable", type:"function" }, { inputs:[], name:"owner", outputs:[{ internalType:"address", name:"", type:"address" }], stateMutability:"view", type:"function" }, { inputs:[{ internalType:"contract Authority", name:"newAuthority", type:"address" }], name:"setAuthority", outputs:[], stateMutability:"nonpayable", type:"function" }, { inputs:[{ internalType:"address", name:"newOwner", type:"address" }], name:"transferOwnership", outputs:[], stateMutability:"nonpayable", type:"function" }, { inputs:[{ internalType:"address", name:"_referralStorage", type:"address" }, { internalType:"bytes32", name:"_code", type:"bytes32" }, { internalType:"address", name:"_newOwner", type:"address" }], name:"transferReferralOwnership", outputs:[], stateMutability:"nonpayable", type:"function" }] as const